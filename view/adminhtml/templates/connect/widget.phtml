<?php
// vim: set ts=2 sw=2 sts=2 et:
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * @author     Qualiteam Software <info@x-cart.com>
 * @category   CDev
 * @package    CDev_XPaymentsCloud
 * @copyright  (c) 2010-present Qualiteam software Ltd <info@x-cart.com>. All rights reserved
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>
<?php
/**
 * @see CDev\XPaymentsCloud\Block\Adminhtml\Connect\Widget
 */
?>

<div id="xpayments-iframe-container"></div>

<script>
//<![CDATA[
var connectSettings = <?php echo $block->getConnectWidgetSettings()->toJson(); ?>;

require([
    'domReady!',
    'xpayments/lib/connect'
], function () {

    /**
     * Process hide/show event on config section
     */
    Fieldset.toggleCollapse = Fieldset.toggleCollapse.wrap(
        function (parentMethod, containerId, saveThroughAjax) {
            parentMethod(containerId, saveThroughAjax);
            this.xpayments.load();
        }
    );

    /**
     * Save configuration
     */
    XPaymentsConnect.prototype.saveConfig = function (params) {

        for (var i = 0; i < this.config.configMap.length; i++) {

            var field = this.config.configMap[i].field;
            var value = params[this.config.configMap[i].param];

            $(field).setValue(value);
        }

        new Ajax.Request(
            this.config.saveUrl,
            {
                method: 'POST',
                parameters: params
            }
        );
    };

    /**
     * Check if X-Payments Cloud section is visible
     */
    XPaymentsConnect.prototype.isVisible = function () {
        return $(this.config.sectionId).visible();
    }

    /**
     * Skip connect script and redirecting to X-Payments directly (if necessary)
     */
    XPaymentsConnect.prototype.getRedirectUrl = XPaymentsConnect.prototype.getRedirectUrl.wrap(
        function (parentMethod) {

            var devUrl = this.config.devUrl;

            if (devUrl) {

                if ('/' === devUrl.substr(-1)) {
                    devUrl = devUrl.substr(0, devUrl.length - 1);
                }

                var url = devUrl +
                    '/connect.php?shop=' + encodeURIComponent(document.location.hostname) +
                    '&account=' + encodeURIComponent(this.config.account) +
                    '&quickaccess=' + encodeURIComponent(this.config.quickAccessKey);;

            } else {

                var url = parentMethod();
            }

            return url;
        }
    );

    /**
     * Load X-Payments Cloud Connect widget
     */
    XPaymentsConnect.prototype.load = XPaymentsConnect.prototype.load.wrap(
        function (parentMethod) {
            if (
                !this.config.loaded
                && this.isVisible()
            ) {
                parentMethod();
                this.config.loaded = true;
            }
        }
    );

    /**
     * Initialize X-Payments Cloud Connect widget
     */
    XPaymentsConnect.prototype.init = XPaymentsConnect.prototype.init.wrap(
        function(parentMethod, settings) {

            Object.extend(
                this.config,
                {
                    loaded: '',
                    saveUrl: '',
                    devUrl: '',
                    configMap: '',
                    sectionId: '',
                }
            );

            parentMethod(settings);

            this.on('config', this.saveConfig);

            return this;
        }
    );

    Fieldset.xpayments = new XPaymentsConnect();
    Fieldset.xpayments.init(connectSettings).load();
});


//]]>
</script>
